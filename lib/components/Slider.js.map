{"version":3,"sources":["../../src/components/Slider.js"],"names":["handleStyle","cursor","userSekect","MozUserSelect","KhtmlUserSelect","WebkitUserSelect","OUserSelect","mapToKeyCode","code","codes","Slider","index","e","stopPropagation","state","dragging","setState","dragIndex","dragStartX","nativeEvent","offsetX","props","dragChange","selection","selected","scale","invert","Math","abs","onChange","pos","clientX","svg","getBoundingClientRect","x","dragReference","dragWindow","direction","keyCode","keyboardStep","round","window","addEventListener","dragEnd","removeEventListener","handleLabelFormat","formatLabelFunction","width","height","reset","selectedColor","unselectedColor","sliderStyle","showLabels","selectionWidth","selectionSorted","Array","from","sort","a","b","defaultLabelFormatFunction","f","touchAction","mouseMove","mouseMoveMobile","map","m","i","keyDown","bind","outline","dragStart","Component","propTypes","data","PropTypes","arrayOf","shape","x0","number","y","isRequired","innerWidth","padding","bucketSize","selectionColor","string","histogramPadding","func","object","bool","labelStyle","defaultProps","display","paddingBottom","zIndex","overflow"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format as d3Format } from \"d3-format\";\n\nconst handleStyle = {\n  cursor: \"move\",\n  userSekect: \"none\",\n  MozUserSelect: \"none\",\n  KhtmlUserSelect: \"none\",\n  WebkitUserSelect: \"none\",\n  OUserSelect: \"none\",\n};\n\n// Map keycodes to positive or negative values\nexport const mapToKeyCode = (code) => {\n  const codes = {\n    37: -1,\n    38: 1,\n    39: 1,\n    40: -1,\n  };\n  return codes[code] || null;\n};\n\nclass Slider extends Component {\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.dragEnd, false);\n    window.addEventListener(\"touchend\", this.dragEnd, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.dragEnd, false);\n    window.removeEventListener(\"touchend\", this.dragEnd, false);\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      dragging: false,\n      dragStartX: null,\n    };\n  }\n\n  dragStart = (index, e) => {\n    e.stopPropagation();\n    if (!this.state.dragging) {\n      this.setState(\n        {\n          dragging: true,\n          dragIndex: index,\n          dragStartX: e.nativeEvent.offsetX,\n        },\n        () => {\n          this.props.dragChange(true);\n        }\n      );\n    }\n  };\n\n  dragEnd = (e) => {\n    e.stopPropagation();\n    this.setState(\n      {\n        dragging: false,\n        dragIndex: null,\n        dragStartX: null,\n      },\n      () => {\n        this.props.dragChange(false);\n      }\n    );\n  };\n\n  dragFromSVG = (e) => {\n    if (!this.state.dragging) {\n      let selection = [...this.props.selection];\n      let selected = this.props.scale.invert(e.nativeEvent.offsetX);\n      let dragIndex;\n\n      if (\n        Math.abs(selected - selection[0]) > Math.abs(selected - selection[1])\n      ) {\n        selection[1] = selected;\n        dragIndex = 0;\n      } else {\n        selection[0] = selected;\n        dragIndex = 1;\n      }\n\n      this.props.onChange(selection);\n      this.setState(\n        {\n          dragging: true,\n          dragIndex,\n        },\n        () => {\n          this.props.dragChange(true);\n        }\n      );\n    }\n  };\n\n  mouseMoveMobile = (e) => {\n    if (this.state.dragging) {\n      let selection = [...this.props.selection];\n      selection[this.state.dragIndex] = this.props.scale.invert(\n        e.nativeEvent.offsetX\n      );\n      this.props.onChange(selection);\n    }\n  };\n\n  mouseMove = (e) => {\n    if (this.state.dragging) {\n      let selection = [...this.props.selection];\n      let pos = this.props.scale.invert(\n        e.clientX - this.svg.getBoundingClientRect().x\n      );\n\n      if (this.state.dragIndex < 2) {\n        selection[this.state.dragIndex] = pos;\n      } else {\n        selection = [\n          pos - this.state.dragReference,\n          pos - this.state.dragReference + this.state.dragWindow,\n        ];\n      }\n\n      this.props.onChange(selection);\n    }\n  };\n\n  keyDown = (index, e) => {\n    const direction = mapToKeyCode(e.keyCode);\n    const { keyboardStep } = this.props;\n    let selection = [...this.props.selection];\n    selection[index] = Math.round(selection[index] + direction * keyboardStep);\n    this.props.onChange(selection);\n  };\n\n  render() {\n    const {\n      selection,\n      scale,\n      handleLabelFormat,\n      formatLabelFunction,\n      width,\n      height,\n      reset,\n      selectedColor,\n      unselectedColor,\n      sliderStyle,\n      showLabels,\n    } = this.props;\n    const selectionWidth = Math.abs(scale(selection[1]) - scale(selection[0]));\n    const selectionSorted = Array.from(selection).sort((a, b) => +a - +b);\n    const defaultLabelFormatFunction = d3Format(handleLabelFormat);\n    const f = formatLabelFunction || defaultLabelFormatFunction;\n    return (\n      <svg\n        style={{ ...sliderStyle, touchAction: \"none\" }}\n        height={height}\n        width={width}\n        onDoubleClick={reset}\n        onMouseMove={this.mouseMove}\n        onPointerMove={this.mouseMoveMobile}\n        ref={(e) => (this.svg = e)}\n      >\n        <rect height={4} fill={unselectedColor} x={0} y={10} width={width} />\n        <rect\n          height={4}\n          fill={selectedColor}\n          x={scale(selectionSorted[0])}\n          y={10}\n          width={selectionWidth}\n        />\n        {selection.map((m, i) => {\n          return (\n            <g\n              tabIndex={0}\n              onKeyDown={this.keyDown.bind(this, i)}\n              transform={`translate(${this.props.scale(m)}, 0)`}\n              key={`handle-${i}`}\n              style={{ outline: \"none\" }}\n            >\n              <circle\n                style={handleStyle}\n                r={10}\n                cx={0}\n                cy={12.5}\n                fill=\"#ddd\"\n                strokeWidth=\"1\"\n              />\n              <circle\n                style={handleStyle}\n                onPointerDown={this.dragStart.bind(this, i)}\n                r={9}\n                cx={0}\n                cy={12}\n                fill=\"white\"\n                stroke=\"#ccc\"\n                strokeWidth=\"1\"\n              />\n              {showLabels ? (\n                <text\n                  style={handleStyle}\n                  textAnchor=\"middle\"\n                  x={0}\n                  y={36}\n                  fill=\"#666\"\n                  fontSize={12}\n                >\n                  {f(m)}\n                </text>\n              ) : null}\n            </g>\n          );\n        })}\n      </svg>\n    );\n  }\n}\n\nSlider.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      x0: PropTypes.number,\n      x: PropTypes.number,\n      y: PropTypes.number,\n    })\n  ).isRequired,\n  selection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  innerWidth: PropTypes.number,\n  padding: PropTypes.number,\n  bucketSize: PropTypes.number,\n  selectionColor: PropTypes.string,\n  histogramPadding: PropTypes.number,\n  scale: PropTypes.func,\n  reset: PropTypes.func,\n  keyboardStep: PropTypes.number,\n  dragChange: PropTypes.func,\n  onChange: PropTypes.func,\n  handleLabelFormat: PropTypes.string,\n  formatLabelFunction: PropTypes.func,\n  sliderStyle: PropTypes.object,\n  showLabels: PropTypes.bool,\n  labelStyle: PropTypes.object,\n  selectedColor: PropTypes.string,\n  unselectedColor: PropTypes.string,\n};\n\nSlider.defaultProps = {\n  sliderStyle: {\n    display: \"block\",\n    paddingBottom: \"8px\",\n    zIndex: 6,\n    overflow: \"visible\",\n  },\n  keyboardStep: 1,\n  showLabels: true,\n};\n\nexport default Slider;\n"],"file":"Slider.js"}