{"version":3,"sources":["../../src/components/Histoslider.js"],"names":["Histoslider","dragging","setState","selection","props","data","onChange","sortedData","sort","a","b","x0","extent","x","map","d","Math","max","min","state","style","width","height","padding","sliderHeight","disableHistogram","innerHeight","innerWidth","histogramHeight","maxValue","y","scale","domain","range","clamp","overrides","dragChange","reset","Object","assign","boxSizing","position","Component","propTypes","PropTypes","arrayOf","shape","number","isRequired","func","selectedColor","string","unselectedColor","barStyle","object","barBorderRadius","barPadding","histogramStyle","sliderStyle","showOnDrag","bool","handleLabelFormat","formatLabelFunction","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { max, min } from \"d3-array\";\nimport { scaleLinear as linear } from \"d3-scale\";\n\nimport Histogram from \"./Histogram\";\nimport Slider from \"./Slider\";\n\nclass Histoslider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dragging: false,\n    };\n  }\n\n  dragChange = (dragging) => {\n    this.setState({ dragging });\n  };\n\n  onChange = (selection) => {\n    const { data, onChange } = this.props;\n    const sortedData = data.sort((a, b) => +a.x0 - +b.x0);\n    const extent = [\n      min(sortedData, ({ x0 }) => +x0),\n      max(sortedData, ({ x }) => +x),\n    ];\n    onChange(\n      selection.map((d) => Math.max(extent[0], Math.min(extent[1], +d)))\n    );\n  };\n\n  reset = () => {\n    this.props.onChange(null);\n  };\n\n  render() {\n    const {\n      style,\n      data,\n      width,\n      height,\n      padding,\n      sliderHeight,\n      disableHistogram,\n    } = this.props;\n\n    const innerHeight = height - padding * 2;\n    const innerWidth = width - padding * 2;\n    const histogramHeight = innerHeight - sliderHeight;\n\n    const sortedData = data.sort((a, b) => +a.x0 - +b.x0);\n    const extent = [\n      min(sortedData, ({ x0 }) => +x0),\n      max(sortedData, ({ x }) => +x),\n    ];\n    const maxValue = max(sortedData, ({ y }) => +y);\n    const scale = linear().domain(extent).range([0, innerWidth]);\n    scale.clamp(true);\n\n    const selection = this.props.selection || extent;\n\n    const overrides = {\n      selection,\n      data: sortedData,\n      scale,\n      max: maxValue,\n      dragChange: this.dragChange,\n      onChange: this.onChange,\n      reset: this.reset,\n      width: innerWidth,\n      dragging: this.state.dragging,\n    };\n\n    return (\n      <div\n        style={Object.assign({}, style, {\n          width,\n          padding,\n          boxSizing: \"border-box\",\n          position: \"relative\",\n        })}\n        className=\"Histoslider Histoslider--wrapper\"\n      >\n        {!disableHistogram && (\n          <Histogram\n            {...Object.assign({}, this.props, overrides, {\n              height: histogramHeight,\n            })}\n          />\n        )}\n        <Slider\n          {...Object.assign({}, this.props, overrides, {\n            height: sliderHeight,\n          })}\n        />\n      </div>\n    );\n  }\n}\n\nHistoslider.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      x0: PropTypes.number,\n      x: PropTypes.number,\n      y: PropTypes.number,\n    })\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  selectedColor: PropTypes.string,\n  unselectedColor: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  selection: PropTypes.arrayOf(PropTypes.number),\n  barStyle: PropTypes.object,\n  barBorderRadius: PropTypes.number,\n  barPadding: PropTypes.number,\n  histogramStyle: PropTypes.object,\n  sliderStyle: PropTypes.object,\n  showOnDrag: PropTypes.bool,\n  style: PropTypes.object,\n  handleLabelFormat: PropTypes.string,\n  formatLabelFunction: PropTypes.func,\n  disableHistogram: PropTypes.bool,\n  padding: PropTypes.number,\n  sliderHeight: PropTypes.number,\n};\n\nHistoslider.defaultProps = {\n  selectedColor: \"#0074D9\",\n  unselectedColor: \"#DDDDDD\",\n  showOnDrag: false,\n  width: 400,\n  height: 200,\n  barBorderRadius: 2,\n  barPadding: 3,\n  padding: 20,\n  sliderHeight: 25,\n  handleLabelFormat: \"0.3P\",\n  formatLabelFunction: undefined,\n};\n\nexport default Histoslider;\n"],"file":"Histoslider.js"}