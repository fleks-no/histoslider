{"version":3,"sources":["../../src/stories/index.js"],"names":["stressTestData","n","offset","multiplier","Array","from","map","d","i","x0","x","y","buckets","dateTimeData","Date","valueOf","HistosliderContainer","state","selection","setSelection","setState","render","props","Component","module","add","value","date","dtf","Intl","DateTimeFormat","year","month","day","formatToParts","mo","da","ye"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from \"react\";\nimport { storiesOf, linkTo } from \"@storybook/react\";\nimport { action } from \"@storybook/addon-actions\";\nimport { Histogram, Histoslider, Slider } from \"..\";\n\nconst stressTestData = (n, offset = 0, multiplier = 1) =>\n  Array.from(Array(n)).map((d, i) => ({\n    x0: (i + offset) * multiplier,\n    x: (i + 1 + offset) * multiplier,\n    y: (i % 5 + 1) * 10\n  }));\n\nconst buckets = [\n  {\n    x0: 0,\n    x: 1,\n    y: 8\n  },\n  {\n    x0: 1,\n    x: 2,\n    y: 2\n  },\n  {\n    x0: 2,\n    x: 3,\n    y: 0\n  },\n  {\n    x0: 3,\n    x: 4,\n    y: 2\n  }\n];\n\nconst dateTimeData = [\n  {\n    x0: new Date('2020-01-01').valueOf(),\n    x: new Date('2020-01-30').valueOf(),\n    y: 8\n  },\n  {\n    x0: new Date('2020-02-01').valueOf(),\n    x: new Date('2020-02-28').valueOf(),\n    y: 2\n  },\n  {\n    x0: new Date('2020-03-01').valueOf(),\n    x: new Date('2020-03-30').valueOf(),\n    y: 0\n  },\n  {\n    x0: new Date('2020-04-01').valueOf(),\n    x: new Date('2020-04-30').valueOf(),\n    y: 2\n  }\n];\n\n// Stateful container for testing interaction\nclass HistosliderContainer extends Component {\n  state = {\n    selection: null\n  };\n  setSelection = selection => {\n    action(\"setSelection\");\n    this.setState({ selection });\n  };\n  render = () =>\n    <Histoslider\n      // An array of data to show on the slider\n      data={buckets}\n      // A function to handle a change in the selection\n      selection={this.state.selection}\n      onChange={this.setSelection}\n      {...this.props}\n    />;\n}\nstoriesOf(\"Histogram\", module);\nstoriesOf(\"Slider\", module);\nstoriesOf(\"Histoslider\", module)\n  .add(\"Open\", () => <HistosliderContainer />)\n  .add(\"Show on drag\", () => <HistosliderContainer showOnDrag />)\n  .add(\"Disable histogram\", () => <HistosliderContainer disableHistogram />)\n  .add(\"More data\", () =>\n    <HistosliderContainer data={stressTestData(50)} width={800} />\n  )\n  .add(\"Non zero start\", () =>\n    <HistosliderContainer data={stressTestData(200, 2000, 10)} width={800} />\n  )\n  .add(\"Stepping in lots of 100\", () =>\n    <HistosliderContainer\n      keyboardStep={100}\n      data={stressTestData(20, 1, 10)}\n      width={800}\n    />\n  )\n  .add(\"No labels\", () =>\n    <HistosliderContainer\n      showLabels={false}/>\n  ).add(\"Date time data\", () =>\n    <HistosliderContainer\n        data={dateTimeData}\n        formatLabelFunction={(value) => {\n          const date = new Date(value);\n          const dtf = new Intl.DateTimeFormat('en', {year: 'numeric', month: 'short', day: '2-digit'});\n          const [{value: mo}, , {value: da}, , {value: ye}] = dtf.formatToParts(date);\n          return `${da}-${mo}-${ye}`;\n        }}\n    />\n  )\n"]}